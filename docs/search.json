[{"path":"/LICENSE.html","id":"gnu-general-public-license","dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"NA","text":"Version 2, June 1991","code":"Copyright (C) 1989, 1991 Free Software Foundation, Inc.   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA  Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed."},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"NA","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"NA","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally. WARRANTY 11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"NA","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, commands use may called something `show w’ `show c’; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"one line to give the program's name and an idea of what it does. Copyright (C) yyyy  name of author  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.  This is free software, and you are welcome to redistribute it under certain conditions; type `show c'  for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written  by James Hacker.  signature of Ty Coon, 1 April 1989 Ty Coon, President of Vice"},{"path":"/articles/ExampleAnalysis.html","id":"purpose-of-analysis","dir":"Articles","previous_headings":"","what":"Purpose of Analysis","title":"Example Analysis","text":"used study University Minnesota, public university MN undergraduate. right now, study Johns Hopkins private university MD graduate. tuition paid different, want explore differences tuition two states.","code":""},{"path":"/articles/ExampleAnalysis.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data Source","title":"Example Analysis","text":"data choose tidytuesday tuition United States.can click download raw data set. Also use data set historical changes tuition U.S.","code":""},{"path":"/articles/ExampleAnalysis.html","id":"download-data-into-your-pc","dir":"Articles","previous_headings":"","what":"Download data into your PC","title":"Example Analysis","text":"","code":"if(!dir.exists(here(\"data\"))) { dir.create(here(\"data\")) }  # saves data only once (not each time you knit a R Markdown) if(!file.exists(here(\"data\",\"chocolate.RDS\"))) {   url_csv1 <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv'   tuition_cost <- readr::read_csv(url_csv1)   url_csv2 <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/historical_tuition.csv'   historical_tuition <- readr::read_csv(url_csv2)      # save the file to RDS objects   saveRDS(tuition_cost, file= here(\"data\",\"tuition_cost.RDS\"))   saveRDS(historical_tuition, file= here(\"data\",\"historical_tuition.RDS\")) }"},{"path":"/articles/ExampleAnalysis.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Example Analysis","text":"","code":"tuition_cost <- readRDS(here(\"data\",\"tuition_cost.RDS\")) historical_tuition <- readRDS(here(\"data\",\"historical_tuition.RDS\")) head(tuition_cost) ## # A tibble: 6 × 10 ##   name       state state…¹ type  degre…² room_…³ in_st…⁴ in_st…⁵ out_o…⁶ out_o…⁷ ##   <chr>      <chr> <chr>   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl> ## 1 Aaniiih N… Mont… MT      Publ… 2 Year       NA    2380    2380    2380    2380 ## 2 Abilene C… Texas TX      Priv… 4 Year    10350   34850   45200   34850   45200 ## 3 Abraham B… Geor… GA      Publ… 2 Year     8474    4128   12602   12550   21024 ## 4 Academy C… Minn… MN      For … 2 Year       NA   17661   17661   17661   17661 ## 5 Academy o… Cali… CA      For … 4 Year    16648   27810   44458   27810   44458 ## 6 Adams Sta… Colo… CO      Publ… 4 Year     8782    9440   18222   20456   29238 ## # … with abbreviated variable names ¹​state_code, ²​degree_length, ## #   ³​room_and_board, ⁴​in_state_tuition, ⁵​in_state_total, ⁶​out_of_state_tuition, ## #   ⁷​out_of_state_total head(historical_tuition) ## # A tibble: 6 × 4 ##   type             year    tuition_type    tuition_cost ##   <chr>            <chr>   <chr>                  <dbl> ## 1 All Institutions 1985-86 All Constant           10893 ## 2 All Institutions 1985-86 4 Year Constant        12274 ## 3 All Institutions 1985-86 2 Year Constant         7508 ## 4 All Institutions 1985-86 All Current             4885 ## 5 All Institutions 1985-86 4 Year Current          5504 ## 6 All Institutions 1985-86 2 Year Current          3367"},{"path":"/articles/ExampleAnalysis.html","id":"data-wrangling-and-data-visualization","dir":"Articles","previous_headings":"","what":"Data wrangling and data visualization","title":"Example Analysis","text":"two side side box plot summarized data, can see average tuition two states different (MD’s little bigger MN’s). Also, can see 75% quantile MD higher MN. go back mean amount tuition table posted earlier, can see matter kind tuition, state state, MD higher MN. functions used:","code":"tuition_two = tuition_cost %>% filter(state == \"Minnesota\" | state == \"Maryland\") %>%    filter(type == \"Public\"| type == \"Private\") head(tuition_two) ## # A tibble: 6 × 10 ##   name       state state…¹ type  degre…² room_…³ in_st…⁴ in_st…⁵ out_o…⁶ out_o…⁷ ##   <chr>      <chr> <chr>   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl> ## 1 Alexandri… Minn… MN      Publ… 2 Year       NA    5416    5416    5416    5416 ## 2 Allegany … Mary… MD      Publ… 2 Year       NA    4140    4140    9210    9210 ## 3 Anne Arun… Mary… MD      Publ… 2 Year       NA    4110    4110   12180   12180 ## 4 Anoka Tec… Minn… MN      Publ… 2 Year       NA    5584    5584    5584    5584 ## 5 Anoka-Ram… Minn… MN      Publ… 2 Year       NA    5073    5073    5073    5073 ## 6 Augsburg … Minn… MN      Priv… 4 Year    10280   38800   49080   38800   49080 ## # … with abbreviated variable names ¹​state_code, ²​degree_length, ## #   ³​room_and_board, ⁴​in_state_tuition, ⁵​in_state_total, ⁶​out_of_state_tuition, ## #   ⁷​out_of_state_total tuition_two %>% group_by(state_code, type, degree_length) %>%    summarise(average_in_state = mean(in_state_tuition), average_out_of_state = mean(out_of_state_tuition)) %>%    mutate(diff = average_out_of_state - average_in_state) ## `summarise()` has grouped output by 'state_code', 'type'. You can override ## using the `.groups` argument. ## # A tibble: 7 × 6 ## # Groups:   state_code, type [4] ##   state_code type    degree_length average_in_state average_out_of_state   diff ##   <chr>      <chr>   <chr>                    <dbl>                <dbl>  <dbl> ## 1 MD         Private 4 Year                  38484.               38484.     0  ## 2 MD         Public  2 Year                   4404.                9978.  5574. ## 3 MD         Public  4 Year                   9583.               23031. 13448. ## 4 MN         Private 2 Year                   3830                 3830      0  ## 5 MN         Private 4 Year                  35465.               35465.     0  ## 6 MN         Public  2 Year                   5437.                5773.   336. ## 7 MN         Public  4 Year                  10579.               15541.  4962. tuition_cost %>% filter(state == \"Minnesota\"| state == \"Maryland\") %>%    filter(type == \"Public\"| type == \"Private\") %>%    ggplot(aes(x = state, y = in_state_tuition, fill = state)) + geom_boxplot() +   labs(title = \"Boxplot of in State Tuition of Two States\",        subtitle = \"The variance of the tuition in MD is larger.\",        x = \"States\", y = \"Tuition ($)\") +   theme(title = element_text(color=\"steelblue\",hjust=0.2,lineheight=0.2,face=\"bold\"),         axis.title.x=element_text(size=10, hjust=0.5),         axis.title.y=element_text(size=10, hjust=0.5)) MD_in_state = tuition_two %>% filter(state == \"Maryland\") %>% select(in_state_tuition) MN_in_state = tuition_two %>% filter(state == \"Minnesota\") %>% select(in_state_tuition) paste0(\"The average in state tuition in MD is $\",map(.x = c(MD_in_state, MN_in_state), .f = function(x) mean(x))[1], \".\") ## [1] \"The average in state tuition in MD is $18017.6222222222.\" paste0(\"The average in state tuition in MN is $\",map(.x = c(MD_in_state, MN_in_state), .f = function(x) mean(x))[2], \".\") ## [1] \"The average in state tuition in MN is $16918.6323529412.\" tuition_cost %>% filter(state == \"Minnesota\"| state == \"Maryland\") %>%    filter(type == \"Public\"| type == \"Private\") %>%    ggplot(aes(x = state, y = in_state_tuition, fill = state)) + geom_boxplot() +   labs(title = \"Boxplot of out of State Tuition of Two States\",        subtitle = \"The variance of the tuition in MD is larger.\",        x = \"States\", y = \"Tuition ($)\") +   theme(title = element_text(color=\"steelblue\",hjust=0.2,lineheight=0.2,face=\"bold\"),         axis.title.x=element_text(size=10, hjust=0.5),         axis.title.y=element_text(size=10, hjust=0.5)) MD_out_state = tuition_two %>% filter(state == \"Maryland\") %>% select(out_of_state_tuition) MN_out_state = tuition_two %>% filter(state == \"Minnesota\") %>% select(out_of_state_tuition) paste0(\"The average out of state tuition in MD is $\", map(.x = c(MD_out_state, MN_out_state), .f = function(x) mean(x))[1]) ## [1] \"The average out of state tuition in MD is $23884.3111111111\" paste0(\"The average out of state tuition in MN is $\", map(.x = c(MD_out_state, MN_out_state), .f = function(x) mean(x))[2]) ## [1] \"The average out of state tuition in MN is $17947.5735294118\" char_num = function(string){   sub = substr(string, 0,4)   num = as.numeric(sub)   return(num) } historical_tuition[\"year\"]  = map_dbl(historical_tuition$year, char_num) historical_tuition %>%    filter(type == \"All Institutions\") %>%    ggplot(aes(x = year, y = tuition_cost, color = tuition_type)) +    geom_glowpoint() + geom_shadowline() + facet_wrap(vars(tuition_type)) +   labs(title = \"Changes of the Tuition From 1985 to 2016\",         subtitle = \"Tuition is increasing. \",        y = \"Tuition($)\")"},{"path":"/articles/ggshadow.html","id":"shadow-line-geom_shadowline","dir":"Articles","previous_headings":"","what":"shadow line: geom_shadowline()","title":"Shadowtext Introduction","text":"simple use geom_shadowline() simple replacement geom_line()","code":"library(ggshadow)  ggplot(economics_long, aes(date, value01, colour = variable)) + geom_shadowline()"},{"path":"/articles/ggshadow.html","id":"varying-line-color","dir":"Articles","previous_headings":"","what":"varying line color","title":"Shadowtext Introduction","text":"possible draw lines varying colors, also possible change color, alpha size shadow using shadowcolor, shadowsize shadowalpha.","code":"library(ggshadow)  ggplot(economics_long, aes(date, value01, group = variable, colour=value01, shadowcolor='grey', shadowalpha=0.5, shadowsize=5*(1-value01))) + geom_shadowline()"},{"path":"/articles/ggshadow.html","id":"shadow-point-example-geom_shadowpoint","dir":"Articles","previous_headings":"","what":"Shadow point example: geom_shadowpoint()","title":"Shadowtext Introduction","text":"Example using geom_shadowpoint().","code":"ggplot(mtcars, aes(wt, mpg)) + geom_shadowpoint(aes( color = carb, shadowcolour = ifelse(vs == 1, 'red', 'blue') ))"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Menem. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Menem M (2022). ggshadow: Shadow Glow Geoms 'ggplot2'. R package version 0.0.4, https://github.com/marcmenem/ggshadow/.","code":"@Manual{,   title = {ggshadow: Shadow and Glow Geoms for 'ggplot2'},   author = {Marc Menem},   year = {2022},   note = {R package version 0.0.4},   url = {https://github.com/marcmenem/ggshadow/}, }"},{"path":"/buildnotes.html","id":null,"dir":"","previous_headings":"","what":"Some notes to reminf myself of the build and release process","title":"Some notes to reminf myself of the build and release process","text":"Reload package building","code":"devtools::load_all() # check package devtools:check()  # submit to CRAN. devtools:release()"},{"path":[]},{"path":"/index.html","id":"website-link","dir":"","previous_headings":"","what":"Website Link","title":"Shadow and Glow Geoms for ggplot2","text":"Click go original R package came . Click go deployed website. #5 Customized Things changed whole background style pkgdown website. changed locations bottoms Navbar. customized navigation bar appears top page navbar field. change name bottom navbar. customized footer field.","code":""},{"path":"/index.html","id":"arrow_double_down-installation","dir":"","previous_headings":"","what":"⏬ Installation","title":"Shadow and Glow Geoms for ggplot2","text":"Get development version github:","code":"## install.packages(\"devtools\") devtools::install_github(\"marcmenem/ggshadow\")"},{"path":"/index.html","id":"book-vignette","dir":"","previous_headings":"","what":"📖 Vignette","title":"Shadow and Glow Geoms for ggplot2","text":"","code":"## after installing the package vignette(\"ggshadow\", package=\"ggshadow\")"},{"path":[]},{"path":"/index.html","id":"with-ggshadow","dir":"","previous_headings":"💹 Example","what":"With ggshadow","title":"Shadow and Glow Geoms for ggplot2","text":"example ","code":"library(ggplot2) library(ggshadow)  ggplot(economics_long, aes(date, value01, colour = variable)) + geom_shadowline()"},{"path":"/index.html","id":"without-ggshadow","dir":"","previous_headings":"💹 Example","what":"Without ggshadow","title":"Shadow and Glow Geoms for ggplot2","text":"example without","code":"library(ggplot2)  ggplot(economics_long, aes(date, value01, colour = variable)) + geom_line()"},{"path":"/index.html","id":"ggshadow-supports-varying-the-line-color","dir":"","previous_headings":"💹 Example","what":"ggshadow supports varying the line color","title":"Shadow and Glow Geoms for ggplot2","text":"color varying","code":"library(ggshadow) library(ggplot2)  ggplot(economics_long,          aes(date, value01,              group = variable,              colour=value01,              shadowcolor='grey',              shadowalpha=0.5,              shadowsize=5*(1-value01))) +      geom_shadowline()"},{"path":"/index.html","id":"ggshadow-also-provides-a-neon-glow-style","dir":"","previous_headings":"💹 Example","what":"ggshadow also provides a Neon glow style","title":"Shadow and Glow Geoms for ggplot2","text":"```{r fig.height=7, fig.width=7} ggplot(economics_long, aes(date, value01, color = variable)) + geom_glowline() + guides(color=‘none’) + theme(plot.background = element_rect(fill = “#190132”), panel.background = element_rect(fill = “#190132”)) glowpoint","code":"![glowline](man/figures/example-glow.png)   ### Neon glow points  ```{r}  ggplot(mtcars, aes(wt, mpg)) +    geom_glowpoint(color='yellow') +    guides(color='none') +    theme(plot.background = element_rect(fill = \"#190132\"),         panel.background = element_rect(fill = \"#190132\"))"},{"path":"/index.html","id":"adding-a-fill-below-the-neon-glow-line","dir":"","previous_headings":"💹 Example","what":"Adding a fill below the neon glow line","title":"Shadow and Glow Geoms for ggplot2","text":"glowlinefll","code":"library(dplyr)  ggplot(filter( economics_long, variable %in% c('pop', 'unemploy') ),      aes(date, value01-0.5, color = variable, fill=variable)) +      geom_glowline() + guides(color='none', shadowcolour='none', fill='none') +      theme(plot.background = element_rect(fill = \"#190132\"),            panel.background = element_rect(fill = \"#190132\"))"},{"path":"/reference/geom_glowpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect Observations — geom_glowpath","title":"Connect Observations — geom_glowpath","text":"Plot glow beneath connected lines make easier read chart several overlapping observations. `geom_glowpath()` connects observations order appear data. `geom_glowline()` connects order variable x axis. `geom_glowstep()` creates stairstep plot, highlighting exactly changes occur.","code":""},{"path":"/reference/geom_glowpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect Observations — geom_glowpath","text":"","code":"geom_glowpath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   arrow = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_glowline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_glowstep(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   direction = \"hv\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_glowpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect Observations — geom_glowpath","text":"mapping Set aesthetic mappings created [aes()] [aes_()]. specified `inherit.aes = TRUE` (default), combined default mapping top level plot. must supply `mapping` plot mapping. data data displayed layer. three    options: `NULL`, default, data inherited plot    data specified call [ggplot()]. `data.frame`, object, override plot    data. objects fortified produce data frame. See    [fortify()] variables created. `function` called single argument,    plot data. return value must `data.frame`,    used layer data. `function` can created    `formula` (e.g. `~ head(.x, 10)`). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [layer()]. often aesthetics, used set aesthetic fixed value, like `colour = \"red\"` `size = 3`. may also parameters paired geom/stat. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). arrow Arrow specification, created [grid::arrow()]. na.rm `FALSE`, default, missing values removed warning. `TRUE`, missing values silently removed. show.legend logical. layer included legends? `NA`, default, includes aesthetics mapped. `FALSE` never includes, `TRUE` always includes. can also named logical vector finely select aesthetics display. inherit.aes `FALSE`, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. [borders()]. orientation orientation layer. default (`NA`) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting `orientation` either `\"x\"` `\"y\"`. See *Orientation* section detail. direction direction stairs: 'vh' vertical horizontal, 'hv' horizontal vertical, 'mid' step half-way adjacent x-values.","code":""},{"path":"/reference/geom_glowpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect Observations — geom_glowpath","text":"`ggplot2` layer add plot.","code":""},{"path":"/reference/geom_glowpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect Observations — geom_glowpath","text":"`group` aesthetic determines cases connected together. functions designed straight replacement [geom_path()], [geom_line()] [geom_step()] functions. set order drawing, make `colour` aesthetic factor, set order bottom top.","code":""},{"path":"/reference/geom_glowpath.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Connect Observations — geom_glowpath","text":"geom_glowpath(): Connects observations order appear data. geom_glowline(): Connects observations order variable x axis. geom_glowstep(): Creates stairstep plot, highlighting exactly changes occur.","code":""},{"path":"/reference/geom_glowpath.html","id":"missing-value-handling","dir":"Reference","previous_headings":"","what":"Missing value handling","title":"Connect Observations — geom_glowpath","text":"`geom_glowpath()`, `geom_glowline()`, `geom_glowstep()` handle `NA` follows: *  `NA` occurs middle line, breaks line. warning    shown, regardless whether `na.rm` `TRUE` `FALSE`. *  `NA` occurs start end line `na.rm` `FALSE`    (default), `NA` removed warning. *  `NA` occurs start end line `na.rm` `TRUE`,    `NA` removed silently, without warning.","code":""},{"path":"/reference/geom_glowpath.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Connect Observations — geom_glowpath","text":"Adds 3 new aesthetics [geom_path()]: * shadowcolour defaults path color, controls color shadow. * shadowsize defaults size, controls size shadow. * shadowalpha defaults 0.06 * alpha 0.06, controls alpha glow.","code":""},{"path":[]},{"path":"/reference/geom_glowpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect Observations — geom_glowpath","text":"","code":"# geom_glowline() is suitable for time series library(ggplot2) ggplot(economics_long, aes(date, value01, colour = variable)) + geom_glowline()"},{"path":"/reference/geom_glowpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Points — geom_glowpoint","title":"Points — geom_glowpoint","text":"point geom used create scatterplots. [geom_glowpoint()] designed drop replacement [geom_point()] added glow beneath point make busy plot aesthetically appealing make points stand rest plot.","code":""},{"path":"/reference/geom_glowpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points — geom_glowpoint","text":"","code":"geom_glowpoint(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_glowpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points — geom_glowpoint","text":"mapping Set aesthetic mappings created [aes()] [aes_()]. specified `inherit.aes = TRUE` (default), combined default mapping top level plot. must supply `mapping` plot mapping. data data displayed layer. three    options: `NULL`, default, data inherited plot    data specified call [ggplot()]. `data.frame`, object, override plot    data. objects fortified produce data frame. See    [fortify()] variables created. `function` called single argument,    plot data. return value must `data.frame`,    used layer data. `function` can created    `formula` (e.g. `~ head(.x, 10)`). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [layer()]. often aesthetics, used set aesthetic fixed value, like `colour = \"red\"` `size = 3`. may also parameters paired geom/stat. na.rm `FALSE`, default, missing values removed warning. `TRUE`, missing values silently removed. show.legend logical. layer included legends? `NA`, default, includes aesthetics mapped. `FALSE` never includes, `TRUE` always includes. can also named logical vector finely select aesthetics display. inherit.aes `FALSE`, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. [borders()].","code":""},{"path":"/reference/geom_glowpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Points — geom_glowpoint","text":"layer add plot.","code":""},{"path":"/reference/geom_glowpoint.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Points — geom_glowpoint","text":"Adds 3 new aesthetics [geom_point()]: * shadowcolour defaults color point, controls color glow * shadowsize defaults size, controls sie shadow. * shadowalpha defaults 0.06 * alpha 0.06, controls alpha glow","code":""},{"path":"/reference/geom_glowpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Points — geom_glowpoint","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg)) p + geom_shadowpoint()"},{"path":"/reference/geom_shadowpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect Observations — geom_shadowpath","title":"Connect Observations — geom_shadowpath","text":"Plot shadow beneath connected lines make easier read chart several overlapping observations. `geom_shadowpath()` connects observations order appear data. `geom_shadowline()` connects order variable x axis. `geom_shadowstep()` creates stairstep plot, highlighting exactly changes occur.","code":""},{"path":"/reference/geom_shadowpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect Observations — geom_shadowpath","text":"","code":"geom_shadowpath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   arrow = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_shadowline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_shadowstep(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   direction = \"hv\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_shadowpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect Observations — geom_shadowpath","text":"mapping Set aesthetic mappings created [aes()] [aes_()]. specified `inherit.aes = TRUE` (default), combined default mapping top level plot. must supply `mapping` plot mapping. data data displayed layer. three    options: `NULL`, default, data inherited plot    data specified call [ggplot()]. `data.frame`, object, override plot    data. objects fortified produce data frame. See    [fortify()] variables created. `function` called single argument,    plot data. return value must `data.frame`,    used layer data. `function` can created    `formula` (e.g. `~ head(.x, 10)`). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [layer()]. often aesthetics, used set aesthetic fixed value, like `colour = \"red\"` `size = 3`. may also parameters paired geom/stat. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). arrow Arrow specification, created [grid::arrow()]. na.rm `FALSE`, default, missing values removed warning. `TRUE`, missing values silently removed. show.legend logical. layer included legends? `NA`, default, includes aesthetics mapped. `FALSE` never includes, `TRUE` always includes. can also named logical vector finely select aesthetics display. inherit.aes `FALSE`, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. [borders()]. orientation orientation layer. default (`NA`) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting `orientation` either `\"x\"` `\"y\"`. See *Orientation* section detail. direction direction stairs: 'vh' vertical horizontal, 'hv' horizontal vertical, 'mid' step half-way adjacent x-values.","code":""},{"path":"/reference/geom_shadowpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect Observations — geom_shadowpath","text":"layer add plot.","code":""},{"path":"/reference/geom_shadowpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect Observations — geom_shadowpath","text":"`group` aesthetic determines cases connected together. functions designed straight replacement [geom_path()], [geom_line()] [geom_step()] functions. set order drawing, make `colour` aesthetic factor, set order bottom top.","code":""},{"path":"/reference/geom_shadowpath.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Connect Observations — geom_shadowpath","text":"geom_shadowpath(): Connects observations order appear data. geom_shadowline(): Connects observations order variable x axis. geom_shadowstep(): Creates stairstep plot, highlighting exactly changes occur.","code":""},{"path":"/reference/geom_shadowpath.html","id":"missing-value-handling","dir":"Reference","previous_headings":"","what":"Missing value handling","title":"Connect Observations — geom_shadowpath","text":"`geom_shadowpath()`, `geom_shadowline()`, `geom_shadowstep()` handle `NA` follows: *  `NA` occurs middle line, breaks line. warning    shown, regardless whether `na.rm` `TRUE` `FALSE`. *  `NA` occurs start end line `na.rm` `FALSE`    (default), `NA` removed warning. *  `NA` occurs start end line `na.rm` `TRUE`,    `NA` removed silently, without warning.","code":""},{"path":"/reference/geom_shadowpath.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Connect Observations — geom_shadowpath","text":"Adds 3 new aesthetics [geom_path()]: * shadowcolour defaults white, controls color shadow. * shadowsize defaults 2.5 * size, controls size shadow. * shadowalpha defaults 0.25 * alpha 0.9, controls alpha shadow.","code":""},{"path":[]},{"path":"/reference/geom_shadowpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect Observations — geom_shadowpath","text":"","code":"# geom_shadowline() is suitable for time series library(ggplot2) ggplot(economics_long, aes(date, value01, colour = variable)) + geom_shadowline()   ggplot(economics_long, aes(date, value01, colour = value01,                            group = variable, alpha=date, shadowalpha=1)) +           geom_shadowline()"},{"path":"/reference/geom_shadowpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Points — geom_shadowpoint","title":"Points — geom_shadowpoint","text":"point geom used create scatterplots. [geom_shadowpoint()] designed drop replacement [geom_point()] added shadow beneath point make busy plot aesthetically appealing make points stand rest plot.","code":""},{"path":"/reference/geom_shadowpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points — geom_shadowpoint","text":"","code":"geom_shadowpoint(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_shadowpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points — geom_shadowpoint","text":"mapping Set aesthetic mappings created [aes()] [aes_()]. specified `inherit.aes = TRUE` (default), combined default mapping top level plot. must supply `mapping` plot mapping. data data displayed layer. three    options: `NULL`, default, data inherited plot    data specified call [ggplot()]. `data.frame`, object, override plot    data. objects fortified produce data frame. See    [fortify()] variables created. `function` called single argument,    plot data. return value must `data.frame`,    used layer data. `function` can created    `formula` (e.g. `~ head(.x, 10)`). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [layer()]. often aesthetics, used set aesthetic fixed value, like `colour = \"red\"` `size = 3`. may also parameters paired geom/stat. na.rm `FALSE`, default, missing values removed warning. `TRUE`, missing values silently removed. show.legend logical. layer included legends? `NA`, default, includes aesthetics mapped. `FALSE` never includes, `TRUE` always includes. can also named logical vector finely select aesthetics display. inherit.aes `FALSE`, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. [borders()].","code":""},{"path":"/reference/geom_shadowpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Points — geom_shadowpoint","text":"layer add plot.","code":""},{"path":"/reference/geom_shadowpoint.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Points — geom_shadowpoint","text":"Adds 3 new aesthetics [geom_point()]: * shadowcolour defaults white, controls color shadow. * shadowsize defaults 1.8 * size, controls sie shadow. * shadowalpha defaults 0.25 * alpha 0.9, controls alpha shadow.","code":""},{"path":"/reference/geom_shadowpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Points — geom_shadowpoint","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg)) p + geom_shadowpoint()"},{"path":"/reference/ggshadow-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"ggproto classes for ggshadow — GeomGlowPath","title":"ggproto classes for ggshadow — GeomGlowPath","text":"Please refer ggplot2 documentation information ggproto class system","code":""},{"path":"/reference/ggshadow-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Default params for geoms — ggshadow-params","title":"Default params for geoms — ggshadow-params","text":"Default params geoms","code":""},{"path":"/reference/ggshadow-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default params for geoms — ggshadow-params","text":"mapping Set aesthetic mappings created [aes()] [aes_()]. specified `inherit.aes = TRUE` (default), combined default mapping top level plot. must supply `mapping` plot mapping. data data displayed layer. three    options: `NULL`, default, data inherited plot    data specified call [ggplot()]. `data.frame`, object, override plot    data. objects fortified produce data frame. See    [fortify()] variables created. `function` called single argument,    plot data. return value must `data.frame`,    used layer data. `function` can created    `formula` (e.g. `~ head(.x, 10)`). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. show.legend logical. layer included legends? `NA`, default, includes aesthetics mapped. `FALSE` never includes, `TRUE` always includes. can also named logical vector finely select aesthetics display. inherit.aes `FALSE`, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. [borders()].","code":""},{"path":"/reference/ggshadow-params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default params for geoms — ggshadow-params","text":"layer object add plot.","code":""},{"path":"/reference/scale_brewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"`brewer` scales provides sequential, diverging qualitative colour schemes ColorBrewer. particularly well suited display discrete values map. See https://colorbrewer2.org information.","code":""},{"path":"/reference/scale_brewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"","code":"scale_shadowcolour_brewer(   ...,   type = \"seq\",   palette = 1,   direction = 1,   aesthetics = \"shadowcolour\" )  scale_shadowcolour_distiller(   ...,   type = \"seq\",   palette = 1,   direction = -1,   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_fermenter(   ...,   type = \"seq\",   palette = 1,   direction = -1,   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"shadowcolour\" )"},{"path":"/reference/scale_brewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"... arguments passed [discrete_scale()], [continuous_scale()], [binned_scale()], `brewer`, `distiller`, `fermenter` variants respectively, control name, limits, breaks, labels forth. type One \"seq\" (sequential), \"div\" (diverging) \"qual\" (qualitative) palette string, use named palette. number, index list palettes appropriate `type`. list available palettes can found Palettes section. direction Sets order colours scale. 1, default, colours output RColorBrewer::brewer.pal(). -1, order colours reversed. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). values colours evenly positioned along gradient vector gives position (0 1) colour colours vector. See rescale() convenience function map arbitrary range 0 1. space colour space calculate gradient. Must \"Lab\" - values deprecated. na.value Colour use missing values guide Type legend. Use \"colourbar\" continuous colour bar, \"legend\" discrete colour legend.","code":""},{"path":"/reference/scale_brewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"scale object add plot.","code":""},{"path":"/reference/scale_brewer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"`brewer` scales carefully designed tested discrete data. designed extended continuous data, results often look good. mileage may vary.","code":""},{"path":"/reference/scale_brewer.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"`distiller` scales extend brewer continuous scales smoothly interpolating 7 colours palette continuous scale. `fermenter` scales provide binned versions brewer scales.","code":""},{"path":"/reference/scale_brewer.html","id":"palettes","dir":"Reference","previous_headings":"","what":"Palettes","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"following palettes available use scales: Diverging BrBG, PiYG, PRGn, PuOr, RdBu, RdGy, RdYlBu, RdYlGn, Spectral Qualitative Accent, Dark2, Paired, Pastel1, Pastel2, Set1, Set2, Set3 Sequential Blues, BuGn, BuPu, GnBu, Greens, Greys, Oranges,      OrRd, PuBu, PuBuGn, PuRd, Purples, RdPu, Reds, YlGn, YlGnBu, YlOrBr, YlOrRd Modify palette `palette` argument.","code":""},{"path":[]},{"path":"/reference/scale_brewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_brewer","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=as.factor(gear))) p + geom_shadowpoint() + scale_shadowcolour_brewer()   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=gear)) p + geom_shadowpoint() + scale_shadowcolour_distiller() + guides(shadowcolor='none')   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=as.factor(gear))) p + geom_shadowpoint() + scale_shadowcolour_brewer()"},{"path":"/reference/scale_colour_hue.html","id":null,"dir":"Reference","previous_headings":"","what":"Evenly spaced colours for discrete data — scale_colour_hue","title":"Evenly spaced colours for discrete data — scale_colour_hue","text":"default colour scale categorical variables. maps level evenly spaced hue colour wheel. generate colour-blind safe palettes.","code":""},{"path":"/reference/scale_colour_hue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evenly spaced colours for discrete data — scale_colour_hue","text":"","code":"scale_shadowcolour_hue(   ...,   h = c(0, 360) + 15,   c = 100,   l = 65,   h.start = 0,   direction = 1,   na.value = \"grey50\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_discrete(   ...,   h = c(0, 360) + 15,   c = 100,   l = 65,   h.start = 0,   direction = 1,   na.value = \"grey50\",   aesthetics = \"shadowcolour\" )"},{"path":"/reference/scale_colour_hue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evenly spaced colours for discrete data — scale_colour_hue","text":"... Arguments passed ggplot2::discrete_scale scale_name name scale used error messages associated scale. palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output. Also accepts rlang lambda function notation. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes. super super class use constructed scale h range hues use, [0, 360] c chroma (intensity colour), maximum value varies depending combination hue luminance. l luminance (lightness), [0, 100] h.start hue start direction direction travel around colour wheel, 1 = clockwise, -1 = counter-clockwise na.value Colour use missing values aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings `colour` `fill` aesthetics time, via `aesthetics = c(\"colour\", \"fill\")`.","code":""},{"path":"/reference/scale_colour_hue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evenly spaced colours for discrete data — scale_colour_hue","text":"scale object add plot.","code":""},{"path":[]},{"path":"/reference/scale_colour_hue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evenly spaced colours for discrete data — scale_colour_hue","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=as.factor(gear))) p + geom_shadowpoint() + scale_shadowcolour_hue()   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=as.factor(gear))) p + geom_shadowpoint() + scale_shadowcolour_discrete()"},{"path":"/reference/scale_colour_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Binned gradient colour scales — scale_colour_steps","title":"Binned gradient colour scales — scale_colour_steps","text":"`scale_*_steps` creates two colour binned gradient (low-high), `scale_*_steps2` creates diverging binned colour gradient (low-mid-high), `scale_*_stepsn` creates n-colour binned gradient. scales binned variants [gradient scale][scale_colour_gradient] family works way.","code":""},{"path":"/reference/scale_colour_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binned gradient colour scales — scale_colour_steps","text":"","code":"scale_shadowcolour_steps(   ...,   low = \"#132B43\",   high = \"#56B1F7\",   space = \"Lab\",   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_steps2(   ...,   low = muted(\"red\"),   mid = \"white\",   high = muted(\"blue\"),   midpoint = 0,   space = \"Lab\",   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_stepsn(   ...,   colours,   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"shadowcolour\",   colors )"},{"path":"/reference/scale_colour_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binned gradient colour scales — scale_colour_steps","text":"... Arguments passed ggplot2::binned_scale name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Also accepts rlang lambda function notation. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale range numeric vector length two providing limits scale. Use NA refer existing minimum maximum function accepts existing (automatic) limits returns new limits. Also accepts rlang lambda function notation. Note setting limits positional scales remove data outside limits. purpose zoom, use limit argument coordinate system (see coord_cartesian()). oob One : Function handles limits outside scale limits (bounds). Also accepts rlang lambda function notation. default (scales::censor()) replaces bounds values NA. scales::squish() squishing bounds values range. scales::squish_infinite() squishing infinite values range. expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. n.breaks number break points create breaks given directly. nice.breaks Logical. breaks attempted placed nice values instead exactly evenly spaced limits. TRUE (default) scale ask transformation object create breaks, may result different number breaks requested. Ignored breaks given explicitly. right values border bins part right (upper) bin? trans continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called <name>_trans (e.g., scales::boxcox_trans()). can create transformation scales::trans_new(). show.limits limits scale appear ticks position position scales, position axis. left right y axes, top bottom x axes. super super class use constructed scale low, high Colours low high ends gradient. space colour space calculate gradient. Must \"Lab\" - values deprecated. na.value Colour use missing values guide Type legend. Use \"colourbar\" continuous colour bar, \"legend\" discrete colour legend. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). mid colour mid point midpoint midpoint (data value) diverging scale. Defaults 0. colours, colors Vector colours use n-colour gradient. values colours evenly positioned along gradient vector gives position (0 1) colour colours vector. See rescale() convenience function map arbitrary range 0 1.","code":""},{"path":"/reference/scale_colour_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binned gradient colour scales — scale_colour_steps","text":"scale object add plot.","code":""},{"path":"/reference/scale_colour_steps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binned gradient colour scales — scale_colour_steps","text":"Default colours generated munsell `mnsl(c(\"2.5PB 2/4\", \"2.5PB 7/10\"))`. Generally, continuous colour scales want keep hue constant, vary chroma luminance. munsell package makes easy using Munsell colour system.","code":""},{"path":[]},{"path":"/reference/scale_colour_steps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binned gradient colour scales — scale_colour_steps","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=gear)) p + geom_shadowpoint() + scale_shadowcolour_steps() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=gear)) p + geom_shadowpoint() + scale_shadowcolour_steps2() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=gear)) p <- p + geom_shadowpoint() + scale_shadowcolour_stepsn(colours=c('red', 'yellow')) p + guides(shadowcolour='none')"},{"path":"/reference/scale_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous and binned colour scales — scale_continuous","title":"Continuous and binned colour scales — scale_continuous","text":"Colour scales continuous data default values `ggplot2.continuous.colour` `ggplot2.continuous.fill` options. [options()] default `\"gradient\"` (.e., [scale_colour_gradient()] [scale_fill_gradient()])","code":""},{"path":"/reference/scale_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous and binned colour scales — scale_continuous","text":"","code":"scale_shadowcolour_continuous(   ...,   type = getOption(\"ggplot2.continuous.colour\", default = \"gradient\") )  scale_shadowcolour_binned(   ...,   type = getOption(\"ggplot2.binned.colour\", default =     getOption(\"ggplot2.continuous.colour\", default = \"gradient\")) )"},{"path":"/reference/scale_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous and binned colour scales — scale_continuous","text":"... Additional parameters passed scale type type One following: * \"gradient\" (default) * \"viridis\" * function returns continuous colour scale.","code":""},{"path":"/reference/scale_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous and binned colour scales — scale_continuous","text":"scale object add plot.","code":""},{"path":"/reference/scale_continuous.html","id":"color-blindness","dir":"Reference","previous_headings":"","what":"Color Blindness","title":"Continuous and binned colour scales — scale_continuous","text":"Many color palettes derived RGB combinations (like \"rainbow\" color palette) suitable support viewers, especially color vision deficiencies. Using `viridis` type, perceptually uniform colour black--white display easy option ensure good perceptive properties visulizations. colorspace package offers functionalities - generate color palettes good perceptive properties, - analyse given color palette, like emulating color blindness, - modify given color palette better perceptivity. information color vision deficiencies suitable color choices see [paper colorspace package](https://arxiv.org/abs/1903.06490) references therein.","code":""},{"path":[]},{"path":"/reference/scale_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous and binned colour scales — scale_continuous","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=gear)) p + geom_shadowpoint() + scale_shadowcolour_continuous() + guides(shadowcolour='none')    library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor=gear)) p + geom_shadowpoint() + scale_shadowcolour_binned() + guides(shadowcolour='none')"},{"path":"/reference/scale_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient colour scales — scale_gradient","title":"Gradient colour scales — scale_gradient","text":"`scale_*_gradient` creates two colour gradient (low-high), `scale_*_gradient2` creates diverging colour gradient (low-mid-high), `scale_*_gradientn` creates n-colour gradient.","code":""},{"path":"/reference/scale_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient colour scales — scale_gradient","text":"","code":"scale_shadowcolour_gradient(   ...,   low = \"#132B43\",   high = \"#56B1F7\",   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_gradient2(   ...,   low = muted(\"red\"),   mid = \"white\",   high = muted(\"blue\"),   midpoint = 0,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_gradientn(   ...,   colours,   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"shadowcolour\",   colors )  scale_shadowcolour_datetime(   ...,   low = \"#132B43\",   high = \"#56B1F7\",   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )  scale_shadowcolour_date(   ...,   low = \"#132B43\",   high = \"#56B1F7\",   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )"},{"path":"/reference/scale_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient colour scales — scale_gradient","text":"... Arguments passed ggplot2::continuous_scale scale_name name scale used error messages associated scale. palette palette function called numeric vector values 0 1 returns corresponding output values (e.g., scales::area_pal()). name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Also accepts rlang lambda function notation. minor_breaks One : NULL minor breaks waiver() default breaks (one minor break major break) numeric vector positions function given limits returns vector minor breaks. Also accepts rlang lambda function notation. n.breaks integer guiding number major breaks. algorithm may choose slightly different number ensure nice break labels. effect breaks = waiver(). Use NULL use default number breaks given transformation. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale range numeric vector length two providing limits scale. Use NA refer existing minimum maximum function accepts existing (automatic) limits returns new limits. Also accepts rlang lambda function notation. Note setting limits positional scales remove data outside limits. purpose zoom, use limit argument coordinate system (see coord_cartesian()). rescaler function used scale input values range [0, 1]. always scales::rescale(), except diverging n colour gradients (.e., scale_colour_gradient2(), scale_colour_gradientn()). rescaler ignored position scales, always use scales::rescale(). Also accepts rlang lambda function notation. oob One : Function handles limits outside scale limits (bounds). Also accepts rlang lambda function notation. default (scales::censor()) replaces bounds values NA. scales::squish() squishing bounds values range. scales::squish_infinite() squishing infinite values range. expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. trans continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called <name>_trans (e.g., scales::boxcox_trans()). can create transformation scales::trans_new(). position position scales, position axis. left right y axes, top bottom x axes. super super class use constructed scale low, high Colours low high ends gradient. space colour space calculate gradient. Must \"Lab\" - values deprecated. na.value Colour use missing values guide Type legend. Use `\"colourbar\"` continuous colour bar, `\"legend\"` discrete colour legend. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). mid colour mid point midpoint midpoint (data value) diverging scale. Defaults 0. colours, colors Vector colours use n-colour gradient. values colours evenly positioned along gradient vector gives position (0 1) colour colours vector. See rescale() convenience function map arbitrary range 0 1.","code":""},{"path":"/reference/scale_gradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient colour scales — scale_gradient","text":"scale object add plot.","code":""},{"path":"/reference/scale_gradient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gradient colour scales — scale_gradient","text":"Default colours generated munsell `mnsl(c(\"2.5PB 2/4\", \"2.5PB 7/10\"))`. Generally, continuous colour scales want keep hue constant, vary chroma luminance. munsell package makes easy using Munsell colour system.","code":""},{"path":[]},{"path":"/reference/scale_gradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gradient colour scales — scale_gradient","text":"","code":"library( ggplot2 ) p <- ggplot(economics, aes(date, unemploy, shadowcolor=pce)) p + geom_shadowline() + scale_shadowcolour_gradient() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(economics, aes(date, unemploy, shadowcolor=pce)) p + geom_shadowline() + scale_shadowcolour_gradient2() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(economics, aes(date, unemploy, shadowcolor=pce)) p <- p + geom_shadowline() + scale_shadowcolour_gradientn(colours=c('red', 'green')) p + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(economics, aes(uempmed, unemploy, shadowcolor=as.POSIXct(date))) p + geom_shadowpath() + scale_shadowcolour_datetime() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(economics, aes(uempmed, unemploy, shadowcolor=date)) p + geom_shadowpath() + scale_shadowcolour_date() + guides(shadowcolour='none')"},{"path":"/reference/scale_grey.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential grey colour scales — scale_grey","title":"Sequential grey colour scales — scale_grey","text":"Based [gray.colors()]. black white equivalent [scale_colour_gradient()].","code":""},{"path":"/reference/scale_grey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential grey colour scales — scale_grey","text":"","code":"scale_shadowcolour_grey(   ...,   start = 0.2,   end = 0.8,   na.value = \"red\",   aesthetics = \"shadowcolour\" )"},{"path":"/reference/scale_grey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential grey colour scales — scale_grey","text":"... Arguments passed ggplot2::discrete_scale scale_name name scale used error messages associated scale. palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output. Also accepts rlang lambda function notation. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes. super super class use constructed scale start grey value low end palette end grey value high end palette na.value Colour use missing values aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\").","code":""},{"path":"/reference/scale_grey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential grey colour scales — scale_grey","text":"scale object add plot.","code":""},{"path":[]},{"path":"/reference/scale_grey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential grey colour scales — scale_grey","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolour=as.factor(gear))) p + geom_glowpoint() + scale_shadowcolour_grey() + guides(shadowcolour='none')"},{"path":"/reference/scale_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Use values without scaling — scale_identity","title":"Use values without scaling — scale_identity","text":"Use set scales data already scaled, .e. already represents aesthetic values ggplot2 can handle directly. scales produce legend unless also supply `breaks`, `labels`, type `guide` want.","code":""},{"path":"/reference/scale_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use values without scaling — scale_identity","text":"","code":"scale_shadowcolour_identity(..., guide = \"none\", aesthetics = \"shadowcolour\")"},{"path":"/reference/scale_identity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use values without scaling — scale_identity","text":"... arguments passed [discrete_scale()] [continuous_scale()] guide Guide use scale. Defaults `\"none\"`. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings `colour` `fill` aesthetics time, via `aesthetics = c(\"colour\", \"fill\")`.","code":""},{"path":"/reference/scale_identity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use values without scaling — scale_identity","text":"scale object add plot.","code":""},{"path":"/reference/scale_identity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use values without scaling — scale_identity","text":"functions `scale_colour_identity()`, `scale_fill_identity()`, `scale_size_identity()`, etc. work aesthetics specified scale name: `colour`, `fill`, `size`, etc. However, functions `scale_colour_identity()` `scale_fill_identity()` also optional `aesthetics` argument can used define `colour` `fill` aesthetic mappings via single function call. functions `scale_discrete_identity()` `scale_continuous_identity()` generic scales can work aesthetic set aesthetics provided via `aesthetics` argument.","code":""},{"path":"/reference/scale_identity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use values without scaling — scale_identity","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolor='red')) p + geom_shadowpoint() + scale_shadowcolour_identity()"},{"path":"/reference/scale_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Create your own discrete scale — scale_manual","title":"Create your own discrete scale — scale_manual","text":"functions allow specify set mappings levels data aesthetic values.","code":""},{"path":"/reference/scale_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create your own discrete scale — scale_manual","text":"","code":"scale_shadowcolour_manual(   ...,   values,   aesthetics = \"shadowcolour\",   breaks = waiver() )"},{"path":"/reference/scale_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create your own discrete scale — scale_manual","text":"... Arguments passed ggplot2::discrete_scale scale_name name scale used error messages associated scale. palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. na.value na.translate = TRUE, aesthetic value missing values displayed ? apply position scales NA always placed far right. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. guide function used create guide name. See guides() information. super super class use constructed scale values set aesthetic values map data values . values matched order (usually alphabetical) limits scale, `breaks` provided. named vector, values matched based names instead. Data values match given `na.value`. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings `colour` `fill` aesthetics time, via `aesthetics = c(\"colour\", \"fill\")`. breaks One : - `NULL` breaks - `waiver()` default breaks (scale limits) - character vector breaks - function takes limits input returns breaks   output","code":""},{"path":"/reference/scale_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create your own discrete scale — scale_manual","text":"scale object add plot.","code":""},{"path":"/reference/scale_manual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create your own discrete scale — scale_manual","text":"functions `scale_colour_manual()`, `scale_fill_manual()`, `scale_size_manual()`, etc. work aesthetics specified scale name: `colour`, `fill`, `size`, etc. However, functions `scale_colour_manual()` `scale_fill_manual()` also optional `aesthetics` argument can used define `colour` `fill` aesthetic mappings via single function call (see examples). function `scale_discrete_manual()` generic scale can work aesthetic set aesthetics provided via `aesthetics` argument.","code":""},{"path":"/reference/scale_manual.html","id":"color-blindness","dir":"Reference","previous_headings":"","what":"Color Blindness","title":"Create your own discrete scale — scale_manual","text":"Many color palettes derived RGB combinations (like \"rainbow\" color palette) suitable support viewers, especially color vision deficiencies. Using `viridis` type, perceptually uniform colour black--white display easy option ensure good perceptive properties visulizations. colorspace package offers functionalities - generate color palettes good perceptive properties, - analyse given color palette, like emulating color blindness, - modify given color palette better perceptivity. information color vision deficiencies suitable color choices see [paper colorspace package](https://arxiv.org/abs/1903.06490) references therein.","code":""},{"path":"/reference/scale_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create your own discrete scale — scale_manual","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolour=as.factor(gear))) p <- p + geom_glowpoint() + guides(shadowcolour='none') p + scale_shadowcolour_manual(values=c('red', 'blue', 'green'))"},{"path":"/reference/scale_viridis.html","id":null,"dir":"Reference","previous_headings":"","what":"Viridis colour scales from viridisLite — scale_viridis","title":"Viridis colour scales from viridisLite — scale_viridis","text":"`viridis` scales provide colour maps perceptually uniform colour black--white. also designed perceived viewers common forms colour blindness. See also <https://bids.github.io/colormap/>.","code":""},{"path":"/reference/scale_viridis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Viridis colour scales from viridisLite — scale_viridis","text":"","code":"scale_shadowcolour_viridis_d(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   option = \"D\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_viridis_c(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   option = \"D\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_viridis_b(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   option = \"D\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"shadowcolour\" )  scale_shadowcolour_ordinal(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   option = \"D\",   aesthetics = \"shadowcolour\" )"},{"path":"/reference/scale_viridis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Viridis colour scales from viridisLite — scale_viridis","text":"... arguments passed [discrete_scale()], [continuous_scale()], [binned_scale] control name, limits, breaks,   labels forth. alpha alpha transparency, number [0,1], see argument alpha hsv. begin, end (corrected) hue [0,1] color map begins ends. direction Sets order colors scale. 1, default, colors ordered darkest lightest. -1, order colors reversed. option character string indicating color map option use. Eight options available: \"magma\" (\"\") \"inferno\" (\"B\") \"plasma\" (\"C\") \"viridis\" (\"D\") \"cividis\" (\"E\") \"rocket\" (\"F\") \"mako\" (\"G\") \"turbo\" (\"H\") aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings `colour` `fill` aesthetics time, via `aesthetics = c(\"colour\", \"fill\")`. values colours evenly positioned along gradient vector gives position (0 1) colour colours vector. See rescale() convenience function map arbitrary range 0 1. space colour space calculate gradient. Must \"Lab\" - values deprecated. na.value Missing values replaced value. guide function used create guide name. See guides() information.","code":""},{"path":"/reference/scale_viridis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Viridis colour scales from viridisLite — scale_viridis","text":"scale object add plot.","code":""},{"path":[]},{"path":"/reference/scale_viridis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Viridis colour scales from viridisLite — scale_viridis","text":"","code":"library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolour=as.factor(gear))) p + geom_glowpoint() + scale_shadowcolour_viridis_d() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolour=gear)) p + geom_glowpoint() + scale_shadowcolour_viridis_c() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolour=gear)) p + geom_glowpoint() + scale_shadowcolour_viridis_b() + guides(shadowcolour='none')   library( ggplot2 ) p <- ggplot(mtcars, aes(wt, mpg, shadowcolour=as.factor(gear))) p + geom_glowpoint() + scale_shadowcolour_ordinal() + guides(shadowcolour='none')"}]
